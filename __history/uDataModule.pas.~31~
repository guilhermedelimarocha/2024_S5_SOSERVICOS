unit uDataModule;

interface

uses
  System.SysUtils, System.Classes, FireDAC.Comp.Client, FireDAC.Stan.Def,
  FireDAC.Stan.Async, FireDAC.Phys, FireDAC.Phys.SQLite, FireDAC.Phys.SQLiteDef,
  FireDAC.FMXUI.Wait, System.IOUtils, FireDAC.Stan.Intf, FireDAC.Stan.Option,
  FireDAC.Stan.Error, FireDAC.UI.Intf, FireDAC.Phys.Intf, FireDAC.Stan.Pool,
  Data.DB, FireDAC.Stan.Param, FireDAC.DatS, FireDAC.DApt.Intf, FireDAC.DApt,
  FireDAC.Comp.DataSet, FireDAC.Stan.ExprFuncs, FireDAC.Phys.SQLiteWrapper.Stat;

type
  TConnection = class(TDataModule)
    FDConnection: TFDConnection;
    FDQuery: TFDQuery;
    procedure DataModuleCreate(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  Connection: TConnection;

implementation

{%CLASSGROUP 'FMX.Controls.TControl'}

{$R *.dfm}

procedure TConnection.DataModuleCreate(Sender: TObject);
begin
    with Connection do
    begin
        FDConnection.Params.Values['DriverID'] := 'SQLite';
        FDConnection.DriverName:= 'SQLite';
        {$IFDEF MSWINDOWS}
        FDConnection.Params.Values['Database'] := TPath.Combine(TPath.GetDocumentsPath, 'saveme.sqlite');

        {$ENDIF}
        {$IFDEF ANDROID}
        FDConnection.Params.Values['Database'] := TPath.Combine(TPath.GetDocumentsPath, 'saveme.sqlite');
        {$ENDIF}
        {$IFDEF IOS}
        Params.Values['Database'] := TPath.Combine(TPath.GetDocumentsPath, 'bancoGastosVater.sqlite');
        {$ENDIF}
        try
            FDConnection.Connected := true;
        except on e:exception do
            raise Exception.Create('Erro de conexão com o banco de dados: ' + e.Message);
        end;
    end;
end;
//var
//  DatabasePath: string;
//  Connected: boo
//begin
//    {$IFDEF ANDROID}
//        Params.Values['Database'] := TPath.Combine(TPath.GetDocumentsPath, 'saveme.sqlite');
//        {$ENDIF}
//

//
//  // O arquivo será extraído dos assets e colocado no caminho correto no primeiro acesso
////  DatabasePath := TPath.Combine(TPath.GetDocumentsPath, 'saveme.sqlite');
//   try
//            Connected := true;
//        except on e:exception do
//            raise Exception.Create('Erro de conexão com o banco de dados: ' + e.Message);
//        end;

//

//
//  FDConnection.DriverName := 'SQLite';
//  FDConnection.Params.Database := DatabasePath;
//  FDConnection.Connected := True;
//end;

end.

