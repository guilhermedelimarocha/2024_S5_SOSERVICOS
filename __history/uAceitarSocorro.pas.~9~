unit uAceitarSocorro;

interface
uses
System.SysUtils, System.Types, System.UITypes, System.Classes, System.Variants,
FMX.Types, FMX.Controls, FMX.Forms, FMX.Graphics, FMX.Dialogs, FMX.Layouts,
FMX.StdCtrls, FMX.Controls.Presentation, FMX.ExtCtrls, FMX.Maps,
System.Sensors, System.Sensors.Components,
// Androidapi.Helpers,
// Androidapi.JNI.JavaTypes, Androidapi.JNI.Os,
FMX.DialogService, System.Permissions,
FMX.WebBrowser, FMX.Memo.Types, FMX.ScrollBox, FMX.Memo, FMX.Objects, uDataModule;
type
Tfrm_PedirSocorro = class(TForm)
lHeader: TLayout;
btnMenu: TSpeedButton;
    lblAceitarSocorro: TLabel;
lBottom: TLayout;
lCenter: TLayout;
lButtonPedirSocorro: TLayout;
minhaLocalizacao: TLocationSensor;
timer: TTimer;
mapaMinhaLocalizacao: TMapView;
pPedirSocorro: TPanel;
logo: TImage;
procedure FormCreate(Sender: TObject);
procedure timerTimer(Sender: TObject);
procedure minhaLocalizacaoLocationChanged(Sender: TObject; const OldLocation, NewLocation: TLocationCoord2D);
procedure btnMenuClick(Sender: TObject);
private
{ Private declarations }
procedure UpdateMap(Latitude, Longitude: Double);
public
{ Public declarations }
end;
var
frm_PedirSocorro: Tfrm_PedirSocorro;
API_KEY: string;
implementation
{$R *.fmx}
//{$R *.Windows.fmx MSWINDOWS}
//{$R *.XLgXhdpiTb.fmx ANDROID}
//{$R *.LgXhdpiTb.fmx ANDROID}
uses uCliente, uPrincipal, uMeuPerfil;
procedure Tfrm_PedirSocorro.btnMenuClick(Sender: TObject);
begin
Menu.Show;
end;
procedure Tfrm_PedirSocorro.FormCreate(Sender: TObject);
var
posicao: TMapCoordinate;
marcador: TMapMarkerDescriptor;
begin
posicao.Latitude := -24.959625905716855;
posicao.Longitude := -53.47571371628359;
mapaMinhaLocalizacao.Location := posicao;
// Centraliza o mapa no marcador
// Define o nível de zoom
mapaMinhaLocalizacao.Zoom := 13;

minhaLocalizacao.Active := True;

timer.Interval := 5000; // Atualiza a cada 5 segundos
timer.Enabled := True;
end;

procedure Tfrm_PedirSocorro.minhaLocalizacaoLocationChanged(Sender: TObject; const OldLocation, NewLocation: TLocationCoord2D);
begin
UpdateMap(NewLocation.Latitude, NewLocation.Longitude);
end;

procedure Tfrm_PedirSocorro.timerTimer(Sender: TObject);
begin
// Verifica se o sensor de localização está ativo
if minhaLocalizacao.Active then
begin
minhaLocalizacao.Sensor.Start;
// updateMap(minhaLocalizacao.Sensor.Latitude, minhaLocalizacao.Sensor.Longitude);
end;

    Connection.FDQuery.Close;
    Connection.FDQuery.SQL.Clear;
    Connection.FDQuery.SQL.Add('SELECT * FROM pedir_socorro WHERE tipo_servico = :tipo_servico AND status =''ABERTO''');
    Connection.FDQuery.ParamByName('tipo_servico').AsString := frm_Login.pessoaLogada.tipoPessoa;

    Connection.FDQuery.Open;

end;
procedure Tfrm_PedirSocorro.UpdateMap(Latitude, Longitude: Double);
var
posicao: TMapCoordinate;
marcador: TMapMarkerDescriptor;
URL: string;
begin
// Define a posição no mapa
posicao := TMapCoordinate.Create(Latitude, Longitude);
// Adiciona um marcador no mapa
marcador := TMapMarkerDescriptor.Create(posicao, 'Minha Localização');
marcador.Snippet := 'Posição Atual';
marcador.Visible := True;
marcador.Draggable := false; // Opcional: permite que o marcador seja arrastado
// Limpa marcadores anteriores para evitar duplicação
mapaMinhaLocalizacao.CleanupInstance;
// Adiciona o marcador no mapa
mapaMinhaLocalizacao.AddMarker(marcador);
// Centraliza o mapa no marcador
mapaMinhaLocalizacao.Location := posicao;
// Define o nível de zoom
mapaMinhaLocalizacao.Zoom := 17;
end;
end.
